1、为什么用Nodejs,它有哪些缺点？

    事件驱动，通过闭包很容易实现客户端的生命活期。
    不用担心多线程，锁，并行计算的问题
    V8引擎速度非常快
    对于游戏来说，写一遍游戏逻辑代码，前端后端通用

当然Nodejs也有一些缺点：

    nodejs更新很快，可能会出现版本兼容
    nodejs还不算成熟，还没有大制作
    nodejs不像其他的服务器，对于不同的链接，不支持进程和线程操作

2、如何避免回调地狱？
	模块化：将回调函数转换为独立的函数
	使用Promise
3.什么是Promise?
	Promise可以帮助我们更好地处理异步操作。
4.用什么工具保证一致的代码风格？为什么要这样？
	团队协作时，保证一致的代码风格是非常重要的，这样团队成员才可以更快地修改代码，而不需要每次去适应新的风格。
	ESLint
5.什么是stub？举例说明
	测试时，stub可以为函数调用返回模拟的结果。
6.什么是事件循环
	Node采用的是单线程的处理机制(所有的I/O请求都采用非阻塞的工作方式)；
	Libuv库负责Node API的执行。它将不同的任务分配给不同的线程，形成一个事件循环，以异步的方式将任务的执行结果返回给V8引擎。
	每一个I/O都需要一个回调函数，一旦执行完便堆到事件循环上用于执行